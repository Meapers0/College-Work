Group Members: Chase Condron, Karsyn Hutchinson, Ivory Scherphorn

Contributions:

    Chase Condron: 
    -provided assistance for better understanding of C++ programming.
    -Chase was super great about helping us with things we struggled on, he worked through our problems and made comments about what did, and did not work. (without just doing the code for us)

    Karsyn Hutchinson: -
    -provided innovative ideas for creating of code.
    -Used a for loop in Q2 their program (not the one submitted), which can be arguably better than a while loop in some aspects.

    Ivory Scherphorn: 
    -Had an innovative way of doing math on Q3. 
    -Ivory was super helpful in talking through the problems, especially when we were both struggling.
    I also really liked how she did Q3, I never would have thought to use a while loop and I thought it made her code look much cleaner.

Problem 1:

	Chase Condron:
    a.) How do you think C++ is different from C?
        C++ is different from C in the way that C++ adds classes and object-oriented programming. As well as having better security 
        over C in how you can hide variables that were once visible in C.

    b.) Where do you think C++ is widely used?

        C++ is mainly used in operating systems or software that is built to be fast and efficient. It also has popularity in
        gaming software and databases.

    c.) What is currently the latest stable release of C++, and what is the latest preview release of C++? What is the next release of C++ expected to be?

        The current stable release of C++ is C++20, and the latest preview of C++ is C++23. I would assume the next release of C++ to be within the next 3 to 4 years from
        C++'s original release date. So, about 2024 or 2023.

    d.) What motivated Stroustroup to start working on this new C++ language?

        He had been using Simula and that it had features that were very helpful  for large software development, but the language itself was too slow
        and impractical for use. C was chosen as the basis for C++ development because it was general purpose, fast, portable and widely used.

    e.) Why did he call it C++?

        The name comes from C++'s own operator, being ++, which increments the value of a variable, and a common naming convention of using
        + to indicate an enhanced computer program. The language had been named 'new C' and 'C with classes' before finally
        becoming C++.

    f.) The Wikipedia page lists about 11 principles/philosophy behind C++. Comment on one or more of these principles, whether you have experienced them in C++ or with other programming languages, 
        and what your opinion about that principle is.

        I like that there should be no language beneath C++ with given the exception to assembly language. This is great as you can make very efficient code with C++ as its a low level language.
        Every feature should be implementable. With this idea, it allows C++ to be extremely flexible in terms of what C++ is limited to.

    g.) Look at some of the criticism of C++. Comment on one or more of these criticisms based on your experience/expectations.

        With my current knowledge of C++, C++ does have a lot of excessive code that other languages can cut shorter.
        It's lacking in terms of garbage collection and the errors that C++ can throw at you can be rather vague and long
        A new up and coming language that seems interesting is Rust. Which is basically C++, however
        with better safety standard which I can agree with. However C++ still has the better performance.

    h.) Please add anything more about C++, or about computer programming in general, that you would like to share.

        The reason why C++ is so successful is how it is able to implement many different programming styles.
    
    Karsyn Hutchinson:
    (a)	How do you think C++ is different from C?
        The primary difference between C and C++ is that C++ supports object oriented programming, whereas C does not. C is more of a minimalist code, whereas C++ introduces a ton of new features, making it much more complex then C.

    (b)	Where do you think C++ is widely used?
        C++ is one of the most popular languages in the world, its used in everything from software data bases, video games, and browsers.

    (c)	What is currently the latest stable release of C++, and what is the latest preview release of C++? What is the next release of C++ expected to be?
            The most current release of C++ is C++20, with the following preview being C++23. I would assume the nest release will be around 2023ish, as there has been a three year gap between C++11, C++14,C++17, and C++20

    (d)	What motivated Stroustroup to start working on this new C++ language?
        Stroustroup had previous experience with programming from his PHD thesis. He enjoyed Stimula and thought it was good for large software development, but it was way too slow to be viable.
        After having issues the UNIX kernel, he started developing C++ with C as the base, and working in Stimula features.

    (e)	Why did he call it C++?
        C for the language it grew off, ++ for it being the increment operator in C

    (f)	The Wikipedia page lists about 11 principles/philosophy behind C++. Comment on one or more of these principles, whether you have experienced them in C++ or with other programming languages, and what your opinion about that principle is.
    I think that It must be driven by actual problems and its features should be immediately useful in real world programs. is really interesting because it takes both of Stoustrpups gripes about BCLP and Stimula into account.
        He felt restrained within BCLP, and Stimula wasnt viable because of its slowness. I personally feel like this is what makes C++ such a fantastic language, it's open to so many companies to use, all for whatever they want.
        There is a ton of creativity to be had in C++, from what it can do, also with how many millions of different ways you can do a problem.

    (g)	Look at some of the criticism of C++. Comment on one or more of these criticisms based on your experience/expectations.
        I can agree with what Ken Thompson says about the complexity making it immobile for companies wanting to sell + port it. Because of all the unique features in C++, its difficult to just move it somewhere else.
        But I also resonate with Brian Kernighan said about it being such a  powerful language, it is used in such a huge amount of things that I almost don't feel like the complexity is an issue.

    (h)	Please add anything more about C++, or about computer programming in general, that you would like to share.
        I am not the most experienced programmer, but so far I have to say C++ is my favorite. I feel like I have much more freedom in my coding, and my code can look wildly different from someone else's, even if we're working on the same problem.

    Ivory Scherphorn:
    (a)	How do you think C++ is different from C?
    C++ is object orientated unlike C which is a function driven language. 

    (b)	Where do you think C++ is widely used?
    C++ is widely used in software infrastructure and resource-constrained applications (such as desktop applications, video games, servers ect.)

    (c)	What is currently the latest stable release of C++, and what is the latest preview release of C++? What is the next release of C++ expected to be?
    The current release is C++ 20. There has been a preview release of C++23 and that is the next expected release.

    (d)	What motivated Stroustroup to start working on this new C++ language?
    He wanted an efficient and flexible language similar to C that was had high-level features for program organization. 

    (e)	Why did he call it C++?
    It comes from the increment operator in C (++). I assume this is due to creating an “increased” version of C that allows more functions and object orientation. 

    (f)	The Wikipedia page lists about 11 principles/philosophy behind C++. Comment on one or more of these principles, whether you have experienced them in C++ or with other programming languages, and what your opinion about that principle is.
    "Programmers should be free to pick their own programming style, and that style should be supported by C++:"
    I personally find this one important because having extremely strict rules about syntax or organization can make it difficult for others to learn the 
    language but also place a restriction on “how to think” about problems. I believe basic rules overall are important simply for programs to work but if it is to restricting than it will be difficult to adapt to and be adapted in newer releases. I have not run into this problem yet, my limited experiences in programming has almost always allowed me to program in my own style as long as it was functional.

    (g)	Look at some of the criticism of C++. Comment on one or more of these criticisms based on your experience/expectations. 
    One criticism is that it’s too complex  Although I am not an expert programmer, I preferred how C++ is set up compared to other programs (like python). 
    I found it’s a good program to understand how the computer works rather than memorizing how to write code. Also, someone commented that C++ is too “baroque” for their taste. 
    I find this humorous as a past art major, but nonetheless I believe that allowing C++ to be baroque lets people experience the program in varying ways rather than 
    one strict set of rules that influences how you code.

    (h)	Please add anything more about C++, or about computer programming in general, that you would like to share.
    Because I was a foreign language undergrad, learning programming languages has been very similar to learning a new spoken language. 
    I personally believe learning both requires an extreme amount of flexibility and I believe C++ allows that (at least so far in my studies). 



Individual Comments:

    Chase Condron: 
        With Q2 I had no trouble getting all positive values, however once I tried to enter negative values is where I got into issues. I thought I could solve this simply by giving currSecLargest = x-1;
    However, this results in a bug that I didn't see. Eventually I got to the solution of storing the first two inputs before the loop begins, thanks to help from the professor.

    Karsyn Hutchinson:
        I struggled with Q2 a lot and needlessly increased the difficulty honestly. I had a strange issue where my code did what I wanted to, unless I did sequential numbers, if i did that my largest number would output as the largest number, but my second largest would output as 0. After a bit I was able to correct that though.


    Ivory Scherphorn: 
        I found Q2 to very time consuming due to creating a way for the user to enter in any counter # they wanted rather then asking for a specific number.
    Once that was figured out however, the logic-boolean expressions were simple to create and implement. Q3 took a lot of time for me to understand how to set up the C++ program to
    implement the math needed. Creating a loop was difficult and took lots of paper and time but eventually was successful and a great learning experience. 

Confidence Level:

    Chase Condron: 
    Q2 - 9/10 
    Q3 - 10/10

    Karsyn Hutchinson:
    Q2 - 8/10
    Q3- 10/10

    Ivory Scherphorn:
    Q2 - 8.5/10
    Q3 - 8.5/10
